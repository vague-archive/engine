use clap::Parser;
use native_common::game_engine::void_public::{self, event::input::KeyboardInput};
use winit::{
    event::{ElementState, KeyEvent},
    keyboard::{KeyCode, PhysicalKey},
};

#[derive(Debug)]
pub enum Error {
    MissingKey,
    UnknownKeyCode,
}

#[derive(Parser, Debug)]
#[command(version, about, long_about = None)]
pub struct EnvArgs {
    /// The title displayed on the window.
    #[arg(short, long, default_value = "Void Game")]
    pub window_title: String,

    /// If the inspector server should be started.
    #[arg(short, long)]
    pub start_js_inspector: bool,

    /// The port to open the inspector server.
    #[arg(short, long, default_value_t = 8080)]
    pub js_inspector_port: u16,

    /// The folder that contains the built JS ECS Modules.
    #[arg(short, long, default_value = "modules")]
    pub modules_dir: String,
}

pub fn to_engine_keyboard_input(input: &KeyEvent) -> Result<KeyboardInput, Error> {
    let PhysicalKey::Code(key_code) = input.physical_key else {
        return Err(Error::MissingKey);
    };

    let key_code = match key_code {
        KeyCode::Backquote => void_public::event::input::KeyCode::Backquote,
        KeyCode::Backslash => void_public::event::input::KeyCode::Backslash,
        KeyCode::BracketLeft => void_public::event::input::KeyCode::BracketLeft,
        KeyCode::BracketRight => void_public::event::input::KeyCode::BracketRight,
        KeyCode::Comma => void_public::event::input::KeyCode::Comma,
        KeyCode::Digit0 => void_public::event::input::KeyCode::Digit0,
        KeyCode::Digit1 => void_public::event::input::KeyCode::Digit1,
        KeyCode::Digit2 => void_public::event::input::KeyCode::Digit2,
        KeyCode::Digit3 => void_public::event::input::KeyCode::Digit3,
        KeyCode::Digit4 => void_public::event::input::KeyCode::Digit4,
        KeyCode::Digit5 => void_public::event::input::KeyCode::Digit5,
        KeyCode::Digit6 => void_public::event::input::KeyCode::Digit6,
        KeyCode::Digit7 => void_public::event::input::KeyCode::Digit7,
        KeyCode::Digit8 => void_public::event::input::KeyCode::Digit8,
        KeyCode::Digit9 => void_public::event::input::KeyCode::Digit9,
        KeyCode::Equal => void_public::event::input::KeyCode::Equal,
        KeyCode::IntlBackslash => void_public::event::input::KeyCode::IntlBackslash,
        KeyCode::IntlRo => void_public::event::input::KeyCode::IntlRo,
        KeyCode::IntlYen => void_public::event::input::KeyCode::IntlYen,
        KeyCode::KeyA => void_public::event::input::KeyCode::KeyA,
        KeyCode::KeyB => void_public::event::input::KeyCode::KeyB,
        KeyCode::KeyC => void_public::event::input::KeyCode::KeyC,
        KeyCode::KeyD => void_public::event::input::KeyCode::KeyD,
        KeyCode::KeyE => void_public::event::input::KeyCode::KeyE,
        KeyCode::KeyF => void_public::event::input::KeyCode::KeyF,
        KeyCode::KeyG => void_public::event::input::KeyCode::KeyG,
        KeyCode::KeyH => void_public::event::input::KeyCode::KeyH,
        KeyCode::KeyI => void_public::event::input::KeyCode::KeyI,
        KeyCode::KeyJ => void_public::event::input::KeyCode::KeyJ,
        KeyCode::KeyK => void_public::event::input::KeyCode::KeyK,
        KeyCode::KeyL => void_public::event::input::KeyCode::KeyL,
        KeyCode::KeyM => void_public::event::input::KeyCode::KeyM,
        KeyCode::KeyN => void_public::event::input::KeyCode::KeyN,
        KeyCode::KeyO => void_public::event::input::KeyCode::KeyO,
        KeyCode::KeyP => void_public::event::input::KeyCode::KeyP,
        KeyCode::KeyQ => void_public::event::input::KeyCode::KeyQ,
        KeyCode::KeyR => void_public::event::input::KeyCode::KeyR,
        KeyCode::KeyS => void_public::event::input::KeyCode::KeyS,
        KeyCode::KeyT => void_public::event::input::KeyCode::KeyT,
        KeyCode::KeyU => void_public::event::input::KeyCode::KeyU,
        KeyCode::KeyV => void_public::event::input::KeyCode::KeyV,
        KeyCode::KeyW => void_public::event::input::KeyCode::KeyW,
        KeyCode::KeyX => void_public::event::input::KeyCode::KeyX,
        KeyCode::KeyY => void_public::event::input::KeyCode::KeyY,
        KeyCode::KeyZ => void_public::event::input::KeyCode::KeyZ,
        KeyCode::Minus => void_public::event::input::KeyCode::Minus,
        KeyCode::Period => void_public::event::input::KeyCode::Period,
        KeyCode::Quote => void_public::event::input::KeyCode::Quote,
        KeyCode::Semicolon => void_public::event::input::KeyCode::Semicolon,
        KeyCode::Slash => void_public::event::input::KeyCode::Slash,
        KeyCode::AltLeft => void_public::event::input::KeyCode::AltLeft,
        KeyCode::AltRight => void_public::event::input::KeyCode::AltRight,
        KeyCode::Backspace => void_public::event::input::KeyCode::Backspace,
        KeyCode::CapsLock => void_public::event::input::KeyCode::CapsLock,
        KeyCode::ContextMenu => void_public::event::input::KeyCode::ContextMenu,
        KeyCode::ControlLeft => void_public::event::input::KeyCode::ControlLeft,
        KeyCode::ControlRight => void_public::event::input::KeyCode::ControlRight,
        KeyCode::Enter => void_public::event::input::KeyCode::Enter,
        KeyCode::SuperLeft => void_public::event::input::KeyCode::MetaLeft,
        KeyCode::SuperRight => void_public::event::input::KeyCode::MetaRight,
        KeyCode::ShiftLeft => void_public::event::input::KeyCode::ShiftLeft,
        KeyCode::ShiftRight => void_public::event::input::KeyCode::ShiftRight,
        KeyCode::Space => void_public::event::input::KeyCode::Space,
        KeyCode::Tab => void_public::event::input::KeyCode::Tab,
        KeyCode::Convert => void_public::event::input::KeyCode::Convert,
        KeyCode::KanaMode => void_public::event::input::KeyCode::KanaMode,
        KeyCode::Lang1 => void_public::event::input::KeyCode::Lang1,
        KeyCode::Lang2 => void_public::event::input::KeyCode::Lang2,
        KeyCode::Lang3 => void_public::event::input::KeyCode::Lang3,
        KeyCode::Lang4 => void_public::event::input::KeyCode::Lang4,
        KeyCode::Lang5 => void_public::event::input::KeyCode::Lang5,
        KeyCode::NonConvert => void_public::event::input::KeyCode::NonConvert,
        KeyCode::Delete => void_public::event::input::KeyCode::Delete,
        KeyCode::End => void_public::event::input::KeyCode::End,
        KeyCode::Help => void_public::event::input::KeyCode::Help,
        KeyCode::Home => void_public::event::input::KeyCode::Home,
        KeyCode::Insert => void_public::event::input::KeyCode::Insert,
        KeyCode::PageDown => void_public::event::input::KeyCode::PageDown,
        KeyCode::PageUp => void_public::event::input::KeyCode::PageUp,
        KeyCode::ArrowDown => void_public::event::input::KeyCode::ArrowDown,
        KeyCode::ArrowLeft => void_public::event::input::KeyCode::ArrowLeft,
        KeyCode::ArrowRight => void_public::event::input::KeyCode::ArrowRight,
        KeyCode::ArrowUp => void_public::event::input::KeyCode::ArrowUp,
        KeyCode::NumLock => void_public::event::input::KeyCode::NumLock,
        KeyCode::Numpad0 => void_public::event::input::KeyCode::Numpad0,
        KeyCode::Numpad1 => void_public::event::input::KeyCode::Numpad1,
        KeyCode::Numpad2 => void_public::event::input::KeyCode::Numpad2,
        KeyCode::Numpad3 => void_public::event::input::KeyCode::Numpad3,
        KeyCode::Numpad4 => void_public::event::input::KeyCode::Numpad4,
        KeyCode::Numpad5 => void_public::event::input::KeyCode::Numpad5,
        KeyCode::Numpad6 => void_public::event::input::KeyCode::Numpad6,
        KeyCode::Numpad7 => void_public::event::input::KeyCode::Numpad7,
        KeyCode::Numpad8 => void_public::event::input::KeyCode::Numpad8,
        KeyCode::Numpad9 => void_public::event::input::KeyCode::Numpad9,
        KeyCode::NumpadAdd => void_public::event::input::KeyCode::NumpadAdd,
        KeyCode::NumpadBackspace => void_public::event::input::KeyCode::NumpadBackspace,
        KeyCode::NumpadClear => void_public::event::input::KeyCode::NumpadClear,
        KeyCode::NumpadClearEntry => void_public::event::input::KeyCode::NumpadClearEntry,
        KeyCode::NumpadComma => void_public::event::input::KeyCode::NumpadComma,
        KeyCode::NumpadDecimal => void_public::event::input::KeyCode::NumpadDecimal,
        KeyCode::NumpadDivide => void_public::event::input::KeyCode::NumpadDivide,
        KeyCode::NumpadEnter => void_public::event::input::KeyCode::NumpadEnter,
        KeyCode::NumpadEqual => void_public::event::input::KeyCode::NumpadEqual,
        KeyCode::NumpadHash => void_public::event::input::KeyCode::NumpadHash,
        KeyCode::NumpadMemoryAdd => void_public::event::input::KeyCode::NumpadMemoryAdd,
        KeyCode::NumpadMemoryClear => void_public::event::input::KeyCode::NumpadMemoryClear,
        KeyCode::NumpadMemoryRecall => void_public::event::input::KeyCode::NumpadMemoryRecall,
        KeyCode::NumpadMemoryStore => void_public::event::input::KeyCode::NumpadMemoryStore,
        KeyCode::NumpadMemorySubtract => void_public::event::input::KeyCode::NumpadMemorySubtract,
        KeyCode::NumpadMultiply => void_public::event::input::KeyCode::NumpadMultiply,
        KeyCode::NumpadParenLeft => void_public::event::input::KeyCode::NumpadParenLeft,
        KeyCode::NumpadParenRight => void_public::event::input::KeyCode::NumpadParenRight,
        KeyCode::NumpadStar => void_public::event::input::KeyCode::NumpadStar,
        KeyCode::NumpadSubtract => void_public::event::input::KeyCode::NumpadSubtract,
        KeyCode::Escape => void_public::event::input::KeyCode::Escape,
        KeyCode::Fn => void_public::event::input::KeyCode::Fn,
        KeyCode::FnLock => void_public::event::input::KeyCode::FnLock,
        KeyCode::PrintScreen => void_public::event::input::KeyCode::PrintScreen,
        KeyCode::ScrollLock => void_public::event::input::KeyCode::ScrollLock,
        KeyCode::Pause => void_public::event::input::KeyCode::Pause,
        KeyCode::BrowserBack => void_public::event::input::KeyCode::BrowserBack,
        KeyCode::BrowserFavorites => void_public::event::input::KeyCode::BrowserFavorites,
        KeyCode::BrowserForward => void_public::event::input::KeyCode::BrowserForward,
        KeyCode::BrowserHome => void_public::event::input::KeyCode::BrowserHome,
        KeyCode::BrowserRefresh => void_public::event::input::KeyCode::BrowserRefresh,
        KeyCode::BrowserSearch => void_public::event::input::KeyCode::BrowserSearch,
        KeyCode::BrowserStop => void_public::event::input::KeyCode::BrowserStop,
        KeyCode::Eject => void_public::event::input::KeyCode::Eject,
        KeyCode::LaunchApp1 => void_public::event::input::KeyCode::LaunchApp1,
        KeyCode::LaunchApp2 => void_public::event::input::KeyCode::LaunchApp2,
        KeyCode::LaunchMail => void_public::event::input::KeyCode::LaunchMail,
        KeyCode::MediaPlayPause => void_public::event::input::KeyCode::MediaPlayPause,
        KeyCode::MediaSelect => void_public::event::input::KeyCode::MediaSelect,
        KeyCode::MediaStop => void_public::event::input::KeyCode::MediaStop,
        KeyCode::MediaTrackNext => void_public::event::input::KeyCode::MediaTrackNext,
        KeyCode::MediaTrackPrevious => void_public::event::input::KeyCode::MediaTrackPrevious,
        KeyCode::Power => void_public::event::input::KeyCode::Power,
        KeyCode::Sleep => void_public::event::input::KeyCode::Sleep,
        KeyCode::AudioVolumeDown => void_public::event::input::KeyCode::AudioVolumeDown,
        KeyCode::AudioVolumeMute => void_public::event::input::KeyCode::AudioVolumeMute,
        KeyCode::AudioVolumeUp => void_public::event::input::KeyCode::AudioVolumeUp,
        KeyCode::WakeUp => void_public::event::input::KeyCode::WakeUp,
        KeyCode::Meta => void_public::event::input::KeyCode::Super,
        KeyCode::Hyper => void_public::event::input::KeyCode::Hyper,
        KeyCode::Turbo => void_public::event::input::KeyCode::Turbo,
        KeyCode::Abort => void_public::event::input::KeyCode::Abort,
        KeyCode::Resume => void_public::event::input::KeyCode::Resume,
        KeyCode::Suspend => void_public::event::input::KeyCode::Suspend,
        KeyCode::Again => void_public::event::input::KeyCode::Again,
        KeyCode::Copy => void_public::event::input::KeyCode::Copy,
        KeyCode::Cut => void_public::event::input::KeyCode::Cut,
        KeyCode::Find => void_public::event::input::KeyCode::Find,
        KeyCode::Open => void_public::event::input::KeyCode::Open,
        KeyCode::Paste => void_public::event::input::KeyCode::Paste,
        KeyCode::Props => void_public::event::input::KeyCode::Props,
        KeyCode::Select => void_public::event::input::KeyCode::Select,
        KeyCode::Undo => void_public::event::input::KeyCode::Undo,
        KeyCode::Hiragana => void_public::event::input::KeyCode::Hiragana,
        KeyCode::Katakana => void_public::event::input::KeyCode::Katakana,
        KeyCode::F1 => void_public::event::input::KeyCode::F1,
        KeyCode::F2 => void_public::event::input::KeyCode::F2,
        KeyCode::F3 => void_public::event::input::KeyCode::F3,
        KeyCode::F4 => void_public::event::input::KeyCode::F4,
        KeyCode::F5 => void_public::event::input::KeyCode::F5,
        KeyCode::F6 => void_public::event::input::KeyCode::F6,
        KeyCode::F7 => void_public::event::input::KeyCode::F7,
        KeyCode::F8 => void_public::event::input::KeyCode::F8,
        KeyCode::F9 => void_public::event::input::KeyCode::F9,
        KeyCode::F10 => void_public::event::input::KeyCode::F10,
        KeyCode::F11 => void_public::event::input::KeyCode::F11,
        KeyCode::F12 => void_public::event::input::KeyCode::F12,
        KeyCode::F13 => void_public::event::input::KeyCode::F13,
        KeyCode::F14 => void_public::event::input::KeyCode::F14,
        KeyCode::F15 => void_public::event::input::KeyCode::F15,
        KeyCode::F16 => void_public::event::input::KeyCode::F16,
        KeyCode::F17 => void_public::event::input::KeyCode::F17,
        KeyCode::F18 => void_public::event::input::KeyCode::F18,
        KeyCode::F19 => void_public::event::input::KeyCode::F19,
        KeyCode::F20 => void_public::event::input::KeyCode::F20,
        KeyCode::F21 => void_public::event::input::KeyCode::F21,
        KeyCode::F22 => void_public::event::input::KeyCode::F22,
        KeyCode::F23 => void_public::event::input::KeyCode::F23,
        KeyCode::F24 => void_public::event::input::KeyCode::F24,
        KeyCode::F25 => void_public::event::input::KeyCode::F25,
        KeyCode::F26 => void_public::event::input::KeyCode::F26,
        KeyCode::F27 => void_public::event::input::KeyCode::F27,
        KeyCode::F28 => void_public::event::input::KeyCode::F28,
        KeyCode::F29 => void_public::event::input::KeyCode::F29,
        KeyCode::F30 => void_public::event::input::KeyCode::F30,
        KeyCode::F31 => void_public::event::input::KeyCode::F31,
        KeyCode::F32 => void_public::event::input::KeyCode::F32,
        KeyCode::F33 => void_public::event::input::KeyCode::F33,
        KeyCode::F34 => void_public::event::input::KeyCode::F34,
        KeyCode::F35 => void_public::event::input::KeyCode::F35,
        _ => return Err(Error::UnknownKeyCode),
    };

    let state = match input.state {
        ElementState::Pressed => void_public::event::input::ElementState::Pressed,
        ElementState::Released => void_public::event::input::ElementState::Released,
    };

    Ok(KeyboardInput::new(key_code, state))
}
